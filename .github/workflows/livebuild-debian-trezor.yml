name: Fedora Live ISO with Trezor Suite

on:
  workflow_dispatch:
    inputs:
      fedora_major:
        description: 'Fedora release (e.g., 42). Leave empty for latest.'
        required: false
        default: ""
      trezor_tag:
        description: 'Optional Trezor Suite tag (e.g., v25.9.3). Empty = latest.'
        required: false
        default: ""

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      ISO_LABEL: FEDORA_TREZOR
      ISO_BASENAME: fedora-live-trezor
      TREZOR_FPR: "EB483B26B078A4AA1B6F425EE21B6950A2ECB65C"
      TREZOR_KEY_URL: "https://trezor.io/security/satoshilabs-2021-signing-key.asc"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Fedora Live ISO with Trezor
        run: |
          set -euo pipefail
          FED="${{ github.event.inputs.fedora_major }}"
          IMG="fedora:${FED:-latest}"
          OUT_DIR=$PWD/out
          mkdir -p "$OUT_DIR"

          docker run --rm --privileged \
            -v "$PWD":/workspace -w /workspace \
            -v /dev:/dev \
            "${IMG}" bash -lc '
              set -euo pipefail
              dnf -y install lorax lorax-lmc-novirt pykickstart anaconda-tui git jq curl gnupg2 ca-certificates xorriso

              FEDORA_VER=$(rpm -E %fedora)
              echo "Fedora detected: $FEDORA_VER"
              REPO="https://download.fedoraproject.org/pub/fedora/linux/releases/${FEDORA_VER}/Everything/x86_64/os/"

              git clone --depth 1 https://pagure.io/fedora-kickstarts.git
              cd fedora-kickstarts || exit 1
              KSDIR=$PWD
              cd ..

              cat > trezor-overlay.ks <<KS
              %include ${KSDIR}/fedora-live-workstation.ks
              
              %packages
              trezor-common
              fuse-libs
              curl
              jq
              gnupg2
              ca-certificates
              %end
              
              %post --log=/root/trezor-post.log
              set -euo pipefail
              TREZOR_TAG="\${TREZOR_TAG:-}"
              TREZOR_KEY_URL="${TREZOR_KEY_URL}"
              TREZOR_FPR="${TREZOR_FPR}"
              mkdir -p /opt/trezor
              cd /opt/trezor
              curl -fsSL "\$TREZOR_KEY_URL" -o trezor.asc
              gpg2 --batch --import trezor.asc || gpg --batch --import trezor.asc
              if [ -n "\$TREZOR_TAG" ]; then
                REL_API="https://api.github.com/repos/trezor/trezor-suite/releases/tags/\$TREZOR_TAG"
              else
                REL_API="https://api.github.com/repos/trezor/trezor-suite/releases/latest"
              fi
              curl -fsSL "\$REL_API" -o /tmp/release.json
              APP_URL=\$(jq -r ".assets[] | select(.name|test(\\"linux.*AppImage\$\\") ) | .browser_download_url" /tmp/release.json | head -n1)
              ASC_URL=\$(jq -r ".assets[] | select(.name|test(\\"linux.*AppImage.asc\$\\") ) | .browser_download_url" /tmp/release.json | head -n1)
              curl -fsSLo trezor-suite.AppImage "\$APP_URL"
              curl -fsSLo trezor-suite.AppImage.asc "\$ASC_URL"
              chmod +x trezor-suite.AppImage
              install -d /usr/share/applications
              cat > /usr/share/applications/trezor-suite.desktop <<EOF
              [Desktop Entry]
              Name=Trezor Suite
              Exec=/opt/trezor/trezor-suite.AppImage --no-sandbox
              Terminal=false
              Type=Application
              Categories=Finance;Utility;
              EOF
              %end
              KS

              ksflatten -c trezor-overlay.ks -o trezor-flat.ks

              OUT="fedora-live-trezor-F${FEDORA_VER}-x86_64.iso"
              livemedia-creator \
                --ks trezor-flat.ks \
                --no-virt \
                --resultdir /var/lmc \
                --project Fedora-Trezor-Live \
                --make-iso \
                --volid "${ISO_LABEL}" \
                --iso-only \
                --iso-name "${OUT}" \
                --releasever "${FEDORA_VER}" \
                --repo="$REPO" \
                --macboot

              echo "Searching for generated ISO..."
              find /var -type f -name "*.iso" -exec cp {} /workspace/out/ \; || true
            '

          echo "âœ… Contents of output directory:"
          ls -lh "$OUT_DIR"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trezor-fedora-iso
          path: out
          retention-days: 14
